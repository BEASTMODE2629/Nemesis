{"google":"UA-32906556-1","body":"[Nemesis](https://github.com/IceCreamYou/Nemesis) is a First Person Shooter tournament-style game created entirely in the browser using HTML5 Canvas/WebGL with no plugins in under 24 hours for AngelHack Silicon Valley 2012. It features everything you'd expect from a shooter:\r\n\r\n* Run around, shoot, collide with things\r\n* Enemies run around and shoot you\r\n* Health tracking, score tracking, radar\r\n* Pickups (extra health)\r\n\r\nBuilt with the help of [Three.js](http://mrdoob.github.com/three.js/) with no prior Three.js or WebGL experience.\r\n\r\n### [Play it now!](http://www.isaacsukin.com/sites/fps/index.html)\r\n\r\nWASD to move, mouse to look around, click to shoot. Hit F11 to go full screen. Mouse recommended.\r\n\r\n### The Story\r\n\r\nOn Saturday, June 23, 2012, I arrived at AngelHack with [Alex Rattray](http://alexrattray.com/). We intended to work together but had been unable to decide on a project we both liked. We saw people flying toy helicopters around and making them avoid obstacles and I decided right then that I was going to build something even cooler that would blow people's minds. I'd done some pretty serious tests with Canvas before but had never used WebGL (or even OpenGL) or coded 3D graphics before. On the other hand, as the co-leader of the [Community Bonus Pack](http://cbp.beyondunreal.com/), I've been involved in game development for years. Alex and I decided that we had different priorities and he ended up building [Acvte](http://acvte.org/), a blogging platform where you write and manage blog posts with Google Docs.\r\n\r\nMeanwhile, choosing [Three.js](http://mrdoob.github.com/three.js/) as a starting point was pretty easy as it came with the recommendation of [Ian Langworth](http://langworth.com/), CTO and co-founder of [Artillery Games](https://artillerygames.com/). The problem is it has [very sparse documentation](http://mrdoob.github.com/three.js/docs/latest/). Luckily I'm no stranger to building on libraries with no documentation, so I approached it the same way I have before: by reading through a lot of [other people's code](https://github.com/mrdoob/three.js/tree/master/examples) until it became clear what that code was doing. [ThreeJSdoc](https://threejsdoc.appspot.com/doc/index.html) helped a lot with finding relevant examples.\r\n\r\nI started writing code at about 4:30pm on Saturday and finished at about 1pm on Sunday. Perhaps surprisingly, I wrote under 600 lines of JavaScript (it's all client-side) for the entire game. Three.js is pretty awesome. I did hit a few roadblocks but it mostly went pretty smoothly and I implemented basically everything I had wanted to. Here are some challenges I faced and the workarounds I used:\r\n\r\n* Loading models turned out to be a pain, so I skipped that and went with the red angry-face cubes as enemies instead. This turned out to work pretty well for its purposes. Three.js does have support for loading models but it was eating up a lot of browser memory and I couldn't get the rotation right in the amount of time I had.\r\n* Some of the controls were hard to wrangle, so I overrode THREE.FirstPersonControls and implemented some features myself to provide more of an FPS experience. Some compromises I made include not being able to look up or down and only being able to walk on flat surfaces (you couldn't go up or down a ramp for example, at least without more code)\r\n* I used a pretty basic 2D-to-3D transformation to build the map\r\n* The enemies move around mostly randomly instead of using [PathFinding.js](https://github.com/qiao/PathFinding.js) like I originally wanted them to because I didn't have time to debug why some paths weren't being found\r\n\r\n\r\n### The code\r\n\r\nAs you might expect for something written in 24 hours, it's a little messy, but it should still be readable. The original code is tagged with \"AngelHack\" in the repo; I'll clean it up and add explanation in-line when I get a chance. If you have experience with Three.js it should be pretty easy to understand, and if not, try asking about it on [IRC](http://webchat.freenode.net/?channels=three.js) or [StackOverflow](http://stackoverflow.com/questions/tagged/three.js).\r\n\r\n\r\n### Future development\r\n\r\nThere's a lot that could still be done here:\r\n\r\n- Allow looking up and down\r\n- Pointer locking (some code for this is already written; unfortunately no stable-release major browsers support it yet)\r\n- Allow jumping\r\n- Allow walking up and down ramps/elevators/etc.\r\n- Better collision (especially for the enemies)\r\n- [Networking](http://blog.artillerygames.com/2012/06/websocket-performance.html), so you can play against other people online\r\n- A level editor so you can play in multiple arenas (along with a way to choose a level)\r\n- More weapons and pickups\r\n- Better AI\r\n\r\nI will probably keep working on the code sporadically, and I'll accept useful pull requests, but it would be awesome to see other people fork and improve the code.\r\n\r\n\r\n### About me\r\n\r\nI'm [Isaac Sukin](http://www.isaacsukin.com/), sometimes known as [IceCreamYou](https://twitter.com/IceCreamYou). I'm an undergraduate student at the Wharton School at the University of Pennsylvania (class of 2014) and self-taught programmer since 2007. I've been involved in game development in [one form or another](http://cbp.beyondunreal.com/) since 1999.","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Nemesis","tagline":"A completely browser-based, HTML5 (WebGL) First-Person Shooter game. Originally built for AngelHack 2012 in 24 hours."}